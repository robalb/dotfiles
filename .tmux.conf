# Make sure to install the plugins: bind-key I
# to uninstall a plugin: remove it from this file, then use the command bind-key alt+u
# check the tmux plugin manager docs for other commands

# setting prefix to 'Alt+q'
# default prefix is commented away because it conflicts with vim command ctrl-b
unbind C-b
set-option -g prefix M-q
#set-option -g prefix2 C-b

bind-key M-q send-prefix


#enable mouse
set -g mouse on

# Splitting terminals using | and -

unbind '"'

unbind %

bind - split-window -v -c "#{pane_current_path}"

bind | split-window -h -c "#{pane_current_path}"

#tmux colors
set -g default-terminal "xterm-256color"
# make colors inside tmux look the same as outside of tmux
# see https://github.com/tmux/tmux/issues/696
# see https://stackoverflow.com/a/41786092
set-option -ga terminal-overrides ",xterm-256color:Tc"

#esc delay. see:
#https://unix.stackexchange.com/questions/608142/whats-the-effect-of-escape-time-in-tmux/608179#608179
set -sg escape-time 50

#vim mode
set -g status-keys vi
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

#resize panel with <meta>-[hjkl]
bind-key -r M-k resize-pane -U 10
bind-key -r M-j resize-pane -D 10
bind-key -r M-h resize-pane -L 10
bind-key -r M-l resize-pane -R 10

#y puts copied text into system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

#flashes pane on selection
set -g focus-events on
set-hook -g pane-focus-in 'selectp -P bg=#121212; run "sleep 0.1"; selectp -P bg=default'

#custom status bar
#to test the high ram/cpu color run this in a shell:
#stress --cpu 8 --io 4 --vm 4 --vm-bytes 1024M --timeout 10s
set -g status-interval 30
set-option -g status-right-length 140
set -g status-right  "#{ram_bg_color}MEM #{ram_percentage} #{cpu_bg_color}CPU #{cpu_percentage} #[bg=default]"
set -ag status-right  "BAT #({ cat /sys/class/power_supply/BAT?/capacity 2>/dev/null || echo 0; } | awk '{ total += $0 } END { print total/NR }')% |"
set -ag status-right  " #(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') |"
set -ag status-right  " %H:%M %a %d-%b-%y"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-cpu'

# Automatically install tmux plugin manager and all its plugins
# https://github.com/tmux-plugins/tpm/issues/105#issuecomment-549920239
setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/"
if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && \
      ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
